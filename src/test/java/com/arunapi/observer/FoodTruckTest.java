/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.arunapi.observer;

import com.arunapi.observer.example.Customer;
import com.arunapi.observer.example.FoodTruck;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;

class FoodTruckTest {
    @Test void placeOrder() {
        FoodTruck foodTruck = new FoodTruck();
        Customer customer = new Customer();
        foodTruck.placeOrder(customer);
        assertEquals(1,foodTruck.getCustomers().size(), "FoodTruck should have list of customers, who has placed order. " +
                "A Subject holds ths list of observers it must notify");
    }

    @Test void callCustomersWhenFoodIsReady() {
        FoodTruck foodTruck = new FoodTruck();
        Customer customer = new Customer();
        foodTruck.placeOrder(customer);
        foodTruck.callCustomersWhenFoodIsReady();
        assertEquals("READY_FOR_PICKUP",customer.getStatus(), "FoodTruck should notify all customers. And customer acknowledges, and come for pickup" +
                "A Subject holds ths list of observers it must notify");
    }

    @Test void callPizzaCustomersWhenPizzaIsReady() {
        FoodTruck foodTruck = new FoodTruck();
        Customer pizzaCustomer = new Customer();
        foodTruck.placeOrder(pizzaCustomer,"PIZZA");
        Customer hotDogCustomer = new Customer();
        foodTruck.placeOrder(hotDogCustomer,"HOT_DOG");
        foodTruck.callPizzaCustomersWhenPizzaIsReady();
        assertEquals("READY_FOR_PICKUP",pizzaCustomer.getStatus(), "FoodTruck should notify only relevant customers. And customer acknowledges, and come for pickup" +
                "In an implementation a Subject may notify the customers based on an aspect");
        assertEquals(null,hotDogCustomer.getStatus(), "FoodTruck should notify only relevant customers. And customer acknowledges, and come for pickup" +
                "In an implementation a Subject may notify the customers based on an aspect");
    }
}
